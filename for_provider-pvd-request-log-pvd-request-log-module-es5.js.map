{"version":3,"sources":["webpack:///src/app/for_provider/pvd-request-log/pvd-request-log.module.ts","webpack:///src/app/for_provider/pvd-request-log/pvd-request-log-routing.module.ts","webpack:///src/app/for_provider/pvd-request-log/pvd-request-log.page.html","webpack:///src/app/for_provider/pvd-request-log/pvd-request-log.page.scss","webpack:///src/app/for_provider/pvd-request-log/pvd-request-log.page.ts"],"names":["PvdRequestLogPageModule","imports","declarations","routes","path","component","PvdRequestLogPageRoutingModule","forChild","exports","PvdRequestLogPage","sessionsManager","sessions","refresher","allMySessionsShared","getUpdateNotifier","subscribe","result","resource","complete","request","event","target","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAqBaA,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DAVnC,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,8FAJO,EAKP,+GALO,CADD;AAQRC,oBAAY,EAAE,CAAC,uEAAD;AARN,OAAT,CAUmC,GAAvBF,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBb,UAAMG,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,8BAA8B;AAAA;AAAA,O;;AAA9BA,oCAA8B,6DAJ1C,+DAAS;AACRL,eAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI0C,GAA9BF,8BAA8B,CAA9B;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFG,iBAAiB;AAG5B,mCACUC,eADV,EACgD;AAAA;;AAAtC,eAAAA,eAAA,GAAAA,eAAA;AAHV,eAAAC,QAAA,GAAsB,EAAtB;AACA,eAAAC,SAAA,GAAyB,IAAzB;AAGK;;AALuB;AAAA;AAAA,qCAOjB;AAAA;;AACT,iBAAKF,eAAL,CAAqBG,mBAArB,CACGC,iBADH,CACqB,IADrB,EAEGC,SAFH,CAEa,UAACC,MAAD,EAAY;AACrB,mBAAI,CAACL,QAAL,GAAgB,KAAI,CAACD,eAAL,CAAqBG,mBAArB,CAAyCI,QAAzC,EAAhB;;AACA,kBAAG,KAAI,CAACL,SAAR,EACA;AACE,qBAAI,CAACA,SAAL,CAAeM,QAAf;AACD;AACF,aARH;AASE,iBAAKP,QAAL,GAAgB,KAAKD,eAAL,CAAqBG,mBAArB,CAAyCI,QAAzC,EAAhB;AACA,iBAAKP,eAAL,CAAqBG,mBAArB,CAAyCM,OAAzC;AACH;AAnB2B;AAAA;AAAA,kCAoBpBC,KApBoB,EAoBb;AACb,iBAAKV,eAAL,CAAqBG,mBAArB,CAAyCM,OAAzC;AACA,iBAAKP,SAAL,GAAiBQ,KAAK,CAACC,MAAvB;AACD;AAvB2B;AAAA;AAAA,wCAwBjB,CACT;AACA;AAED;AA5B2B;;AAAA;AAAA,S;;;;gBAZrB;;;;AAYIZ,uBAAiB,6DAN7B,4EAM6B,EAL7B,gEAAU;AACTa,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAK6B,E,+EAIF,gG,EAJE,GAAjBd,iBAAiB,CAAjB","file":"for_provider-pvd-request-log-pvd-request-log-module-es5.js","sourcesContent":["import { CommonDeclarationsModule } from './../../common/common-declarations/common-declarations.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PvdRequestLogPageRoutingModule } from './pvd-request-log-routing.module';\n\nimport { PvdRequestLogPage } from './pvd-request-log.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PvdRequestLogPageRoutingModule,\n    CommonDeclarationsModule\n  ],\n  declarations: [PvdRequestLogPage]\n})\nexport class PvdRequestLogPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PvdRequestLogPage } from './pvd-request-log.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PvdRequestLogPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PvdRequestLogPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"end\\\">\\n        <ion-icon name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-loading-toolbar-button></app-loading-toolbar-button>\\n    </ion-buttons>\\n    <ion-title>تاریخچه درخواست ها</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <app-session-list-item-minimal\\n    [providerPerspective]=\\\"true\\\"\\n    *ngFor=\\\"let session of sessions\\\"\\n    [session] = \\\"session\\\"\\n  >\\n  </app-session-list-item-minimal>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcl9wcm92aWRlci9wdmQtcmVxdWVzdC1sb2cvcHZkLXJlcXVlc3QtbG9nLnBhZ2Uuc2NzcyJ9 */\";","import { SessionsManagerService } from 'src/app/services/sessions-manager-service';\nimport { IonRefresher } from '@ionic/angular';\nimport { Session } from 'src/app/models/session';\nimport { Component, OnInit } from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-pvd-request-log',\n  templateUrl: './pvd-request-log.page.html',\n  styleUrls: ['./pvd-request-log.page.scss'],\n})\nexport class PvdRequestLogPage implements OnInit {\n  sessions: Session[] = [];\n  refresher:IonRefresher = null;\n  constructor(\n    private sessionsManager:SessionsManagerService\n  ) { }\n\n  ngOnInit() {\n    this.sessionsManager.allMySessionsShared\n      .getUpdateNotifier(this)\n      .subscribe((result) => {\n        this.sessions = this.sessionsManager.allMySessionsShared.resource();\n        if(this.refresher)\n        {\n          this.refresher.complete();\n        }\n      });\n      this.sessions = this.sessionsManager.allMySessionsShared.resource();\n      this.sessionsManager.allMySessionsShared.request();\n  }\n  refresh(event) {\n    this.sessionsManager.allMySessionsShared.request();\n    this.refresher = event.target;\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    \n  }\n\n}\n"]}