{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/scrolling.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/observers.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/keycodes.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/cdk.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/bidi.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/esm2015/form-field.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/platform.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/esm2015/autocomplete.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/coercion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/esm2015/core.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/a11y.js"],"names":["_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","pipe","_viewport","_itemSize","_minBufferPx","_maxBufferPx","viewport","_updateTotalContentSize","_updateRenderedRange","complete","Error","index","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","start","end","viewportSize","getViewportSize","dataLength","startBuffer","expandStart","Math","ceil","max","min","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","next","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","value","ɵfac","CdkFixedSizeVirtualScroll_Factory","t","ɵdir","type","selectors","inputs","features","provide","useFactory","deps","propDecorators","args","selector","providers","DEFAULT_SCROLL_TIME","ScrollDispatcher","_ngZone","_platform","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","Map","scrollable","has","set","elementScrolled","subscribe","scrollableReference","get","unsubscribe","auditTimeInMs","isBrowser","observer","_addGlobalListener","subscription","_removeGlobalListener","forEach","_","container","deregister","elementRef","ancestors","getAncestorScrollContainers","scrolled","target","indexOf","scrollingContainers","_subscription","_scrollableContainsElement","push","element","nativeElement","scrollableElement","getElementRef","parentElement","runOutsideAngular","window","document","ScrollDispatcher_Factory","ɵprov","token","factory","providedIn","ctorParameters","ngInjectableDef","SCROLL_DISPATCHER_PROVIDER_FACTORY","parentDispatcher","ngZone","platform","SCROLL_DISPATCHER_PROVIDER","CdkScrollable","scrollDispatcher","dir","_destroyed","_elementScrolled","register","options","el","isRtl","left","right","bottom","top","scrollHeight","clientHeight","NORMAL","scrollWidth","clientWidth","INVERTED","NEGATED","_applyScrollToOptions","scrollTo","scrollTop","scrollLeft","from","LEFT","RIGHT","CdkScrollable_Factory","decorators","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","run","renderedRangeStream","asObservable","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_viewportSize","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_measureViewportSize","attach","onContentScrolled","_markChangeDetectionNeeded","detach","forOf","_forOf","dataStream","data","newLength","length","onDataLengthChanged","_doChangeDetection","size","_calculateSpacerSize","range","onContentRendered","offset","to","isHorizontal","orientation","axis","axisDirection","transform","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","style","runAfterChangeDetection","fn","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","CdkVirtualScrollViewport_HostBindings","outputs","useExisting","ngContentSelectors","decls","vars","consts","template","CdkVirtualScrollViewport_Template","styles","encapsulation","changeDetection","undefined","host","None","OnPush","getSize","node","getBoundingClientRect","rect","width","height","CdkVirtualForOf","_viewContainerRef","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_data","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","i","view","j","rootNodes","changes","diff","_renderedItems","_updateContext","_applyChanges","destroy","slice","find","create","cdkVirtualForTrackBy","oldDs","newDs","disconnect","connect","count","context","_updateComputedContextProperties","detectChanges","forEachOperation","record","adjustedPreviousIndex","currentIndex","previousIndex","_insertViewForNewItem","$implicit","item","_cacheView","_detachView","move","forEachIdentityChange","remove","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","createEmbeddedView","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","ds","Array","prototype","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","ScrollingModule","ɵmod","ɵinj","ScrollingModule_Factory","imports","ngJitMode","declarations","exports","ScrollDispatchModule","ScrollDispatchModule_Factory","DEFAULT_RESIZE_TIME","ViewportRuler","_change","_invalidateCache","change","_updateViewportSize","output","scrollPosition","getViewportScrollPosition","documentElement","documentRect","body","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","VIEWPORT_RULER_PROVIDER_FACTORY","parentRuler","VIEWPORT_RULER_PROVIDER","MutationObserverFactory","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","_cleanupObserver","elementOrRef","stream","_observeElement","_unobserveElement","mutations","observe","characterData","childList","subtree","ContentObserver_Factory","CdkObserveContent","_contentObserver","_elementRef","event","_disabled","_currentSubscription","disabled","_subscribe","_unsubscribe","debounce","_debounce","CdkObserveContent_Factory","exportAs","ObserversModule","ObserversModule_Factory","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","hasModifierKey","modifiers","some","modifier","altKey","shiftKey","ctrlKey","metaKey","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","hasAttached","_attachedHost","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","TemplatePortal","templateRef","BasePortalOutlet","_isDisposed","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","attachView","hostView","detachView","appendChild","_getComponentRootNode","viewContainer","viewRef","rootNode","parentNode","removeChild","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","CdkPortalOutlet","_isInitialized","attached","_attachedRef","ref","emit","clear","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","VERSION","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","Directionality","_document","bodyDir","htmlDir","Directionality_Factory","Dir","_dir","old","normalizedValue","toLowerCase","_rawDir","Dir_Factory","Dir_HostBindings","BidiModule","BidiModule_Factory","_c2","_c3","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","_control","placeholder","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","id","hideRequiredMarker","required","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","nextUniqueId","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","opacity","MatFormFieldControl","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatFormField","labelOptions","_defaults","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_previousDirection","_labelOptions","floatLabel","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","control","controlType","classList","add","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","onStable","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","ids","_getDisplayedMessages","map","error","setDescribedByIds","labelEl","children","textContent","trim","contains","startWidth","gapWidth","startEls","querySelectorAll","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","child","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","animation","String","animations","MatFormFieldModule","MatFormFieldModule_Factory","hasV8BreakIterator","Intl","v8BreakIterator","_a","Platform","_platformId","EDGE","test","navigator","userAgent","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform_Factory","Object","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","Set","featureTestInput","createElement","filter","setAttribute","supportsPassiveEvents","supportsPassiveEventListeners","addEventListener","defineProperty","normalizePassiveListenerOptions","capture","RtlScrollAxisType","rtlScrollAxisType","supportsScrollBehavior","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","visibility","pointerEvents","position","content","contentStyle","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","MatAutocomplete_ng_template_0_Template","ctx_r0","_classList","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","MatAutocomplete","defaults","showPanel","_isOpen","displayWith","optionSelected","opened","closed","_autoActiveFirstOption","_keyManager","withWrap","_setVisibility","panel","_setVisibilityClasses","split","reduce","className","MatAutocomplete_Factory","MatAutocomplete_ContentQueries","optionGroups","MatAutocomplete_Query","disableRipple","panelWidth","MatAutocomplete_Template","descendants","MatAutocompleteOrigin","MatAutocompleteOrigin_Factory","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","_element","_overlay","_zone","scrollStrategy","_formField","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","EMPTY","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","onSelectionChange","getRootNode","_isInsideShadowRoot","ShadowRoot","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","_attachOverlay","_resetLabel","_closingActionsSubscription","clickTarget","composedPath","formField","overlayElement","_setTriggerValue","isDisabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","parseFloat","_previousValue","shouldAnimate","_animateAndLockLabel","activeItemIndex","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","selected","deselect","overlayRef","_portal","_getOverlayConfig","keydownEvents","stopPropagation","updateSize","_getPanelWidth","setOrigin","_getConnectedElement","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPosition","originX","originY","overlayX","overlayY","abovePosition","panelClass","positions","withPositions","connectedTo","getConnectedOverlayOrigin","_getHostWidth","setActiveItem","readOnly","tabOut","_getOutsideClickStream","detachments","MatAutocompleteTrigger_Factory","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","MatAutocompleteModule_Factory","BlockScrollStrategy","_previousHTMLStyles","_isEnabled","_canBeEnabled","root","_previousScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","disable","threshold","_initialScrollPosition","abs","NoopScrollStrategy","isElementScrolledOutsideView","containerBounds","outsideAbove","outsideBelow","outsideLeft","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","parentRects","ScrollStrategyOptions","noop","close","config","block","ScrollStrategyOptions_Factory","OverlayConfig","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","keys","key","ConnectionPositionPair","origin","offsetX","offsetY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","overlays","_keydownEventSubscriptions","_keydownEvents","_isAttached","splice","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","OverlayContainer","_containerElement","_createContainer","containerClass","previousContainers","getElementsByClassName","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_keydownEventsObservable","attachResult","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","_togglePointerEvents","_attachBackdrop","_toggleClasses","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","sizeConfig","assign","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","showingClass","insertBefore","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","cssClass","boundingBoxClass","FlexibleConnectedPositionStrategy","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","_validatePositions","hostElement","_boundingBox","_isInitialRender","_lastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getConfig","verticalFit","horizontalFit","overflowRight","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","smallestDistanceToViewportEdge","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","_hasExactPosition","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","horizontalStyleProperty","documentWidth","originBounds","overlayBounds","scrollContainerBounds","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","pair","HTMLElement","dest","hasOwnProperty","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","overlayContainer","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","parentStyles","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","OverlayPositionBuilder_Factory","Overlay","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","scrollStrategyFactory","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_detachOverlay","_buildConfig","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","p","_createOverlay","CdkConnectedOverlay_Factory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","DataSource","isDataSource","ArrayDataSource","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","_deselectedToEmit","_selectedToEmit","changed","onChange","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","select","_unmarkAll","isEmpty","predicate","_selected","sort","added","removed","getMultipleValuesInSingleSelectionError","UniqueSelectionDispatcher","_listeners","name","listener","registered","UniqueSelectionDispatcher_Factory","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","isNaN","coerceArray","isArray","coerceCssPixelValue","coerceElement","MatOption_mat_pseudo_checkbox_0_Template","VERSION$1","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$2","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","MatCommonModule","_sanityChecksEnabled","_hammerLoader","_hasDoneGlobalChecks","_hasCheckedHammer","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","_isTestEnv","__karma__","jasmine","doctype","console","warn","getComputedStyle","testElement","computedStyle","display","full","MatCommonModule_Factory","Boolean","mixinDisabled","base","mixinColor","defaultColor","_color","colorPalette","mixinDisableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","mixinErrorState","oldState","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","newState","isErrorState","mixinInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","DateAdapter","_localeChanges","isDateInstance","isValid","invalid","locale","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","MAT_DATE_FORMATS","SUPPORTS_INTL_API","DEFAULT_MONTH_NAMES","ɵ0","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","useUtcForDisplay","_clampDate","getFullYear","getDay","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","result","parse","displayFormat","clone","setFullYear","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","obj","NaN","n","str","replace","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","commonModule","events","_checkHammerIsAvailable","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","longpress","time","recognizeWith","recognizer","constructor","inheritances","GestureConfig_Factory","MatLine","MatLine_Factory","setLines","lines","setClass","MatLineSetter","MatLineModule","MatLineModule_Factory","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","state","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","RippleRenderer","_target","elementOrElementRef","_isPointerDown","_triggerEvents","_activeRipples","_onMousedown","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","_onTouchStart","touches","changedTouches","_onPointerUp","ripple","isVisible","terminateOnPointerUp","persistent","fadeOut","_containerRect","animationConfig","centered","radius","distanceToFurthestCorner","duration","backgroundColor","transitionDuration","enforceStyleRecalculation","rippleRef","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","rippleEl","_triggerElement","_removeTriggerEvents","delay","getPropertyValue","distX","distY","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","globalOptions","animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","fadeOutAll","setupTriggerEvents","trigger","configOrX","_trigger","MatRipple_Factory","MatRipple_HostBindings","unbounded","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","arguments","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","label","MatOptgroup_Template","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_parent","group","_active","_mostRecentViewValue","_stateChanges","_emitSelectionChangeEvent","_getHostElement","viewValue","multiple","MatOption_Factory","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","_getTabIndex","_getAriaSelected","active","MatOption_Template","_countGroupLabelsBeforeOption","optionIndex","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","ID_DELIMINATOR","addAriaReferencedId","attr","getAriaReferenceIds","existingId","removeAriaReferencedId","filteredIds","val","removeAttribute","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","messagesContainer","AriaDescriber","message","_canBeDescribed","_setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","_removeCdkDescribedByReferenceIds","_createMessagesContainer","preExistingContainer","getElementById","originalReferenceIds","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","AriaDescriber_Factory","ARIA_DESCRIBER_PROVIDER_FACTORY","ARIA_DESCRIBER_PROVIDER","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","_vertical","_allowedModifierKeys","_skipPredicateFn","_pressedLetters","newItems","itemArray","newIndex","shouldWrap","enabled","_horizontal","debounceInterval","getLabel","inputString","items","_getItemsArray","toUpperCase","updateActiveItem","isModifierAllowed","every","setNextItemActive","setPreviousItemActive","toLocaleUpperCase","fromCharCode","_setActiveItemByIndex","setFirstItemActive","_setActiveItemByDelta","setLastItemActive","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","InteractivityChecker","hasAttribute","hasGeometry","frameElement","getFrameElement","getWindow","frameType","nodeName","getTabIndexValue","tabIndexValue","isPotentiallyTabbableIOS","tabIndex","isPotentiallyFocusable","InteractivityChecker_Factory","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","parseInt","inputType","ownerDocument","defaultView","FocusTrap","_checker","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","startAnchor","_startAnchor","endAnchor","_endAnchor","_createAnchor","_executeOnStable","focusInitialElement","bound","markers","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","_getRegionBoundary","isTabbable","tabbableChild","anchor","_toggleAnchorTabIndex","isEnabled","isStable","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","_focusTrapFactory","_previouslyFocusedElement","focusTrap","autoCapture","focusInitialElementWhenReady","_autoCapture","CdkTrapFocus_Factory","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","defaultOptions","politeness","_previousTimeout","elementClass","previousElements","liveEl","LiveAnnouncer_Factory","CdkAriaLive","_liveAnnouncer","_politeness","elementText","_previousAnnouncedText","announce","CdkAriaLive_Factory","LIVE_ANNOUNCER_PROVIDER_FACTORY","parentAnnouncer","liveElement","LIVE_ANNOUNCER_PROVIDER","TOUCH_BUFFER_MS","captureEventListenerOptions","FocusMonitor","_windowFocused","_elementInfo","_monitoredElementCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","_documentTouchstartListener","_touchTimeoutId","_windowFocusListener","_windowFocusTimeoutId","checkChildren","cachedInfo","subject","info","unlisten","_incrementMonitoredElementCount","focusListener","_onFocus","blurListener","_onBlur","elementInfo","_setClasses","_decrementMonitoredElementCount","_info","stopMonitoring","shouldSet","_toggleClass","_originTimeoutId","focusTarget","Node","_lastFocusOrigin","_wasCausedByTouch","_emitOrigin","relatedTarget","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","cdkFocusChange","_monitorSubscription","monitor","CdkMonitorFocus_Factory","FOCUS_MONITOR_PROVIDER_FACTORY","FOCUS_MONITOR_PROVIDER","isFakeMousedownFromScreenReader","buttons","A11yModule","A11yModule_Factory"],"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AC5GA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;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","file":"default~for_admin-adm-providers-adm-providers-module~for_user-usr-view-provider-calendar-usr-view-pr~dc2823ca-es5.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, SkipSelf, ElementRef, NgModule, IterableDiffers, TemplateRef, ViewContainerRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Output, ViewChild, ViewEncapsulation, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, fromEvent, of, Observable, animationFrameScheduler, asapScheduler, merge } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, shareReplay, switchMap } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { ArrayDataSource, isDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(Platform)); };\nScrollDispatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ScrollDispatcher, factory: ScrollDispatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ ScrollDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: NgZone }, { type: Platform }]; }, null); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n        options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ScrollDispatcher }, { type: NgZone }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return super.measureScrollOffset(from ? from : this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{ selector: 'cdk-virtual-scroll-viewport',\n                template: \"<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\"><ng-content></ng-content></div><div class=\\\"cdk-virtual-scroll-spacer\\\" [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\",\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\"],\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }] }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        /** @type {?} */\n        const ds = isDataSource(value) ? value :\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            new ArrayDataSource(value instanceof Observable ? value : Array.prototype.slice.call(value || []));\n        this._dataSourceChanges.next(ds);\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ViewContainerRef }, { type: TemplateRef }, { type: IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[BidiModule, PlatformModule], BidiModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule, PlatformModule]; }, exports: function () { return [BidiModule, CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated ScrollDispatchModule has been renamed to ScrollingModule.\n * \\@breaking-change 8.0.0 delete this alias\n */\nclass ScrollDispatchModule {\n}\nScrollDispatchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollDispatchModule });\nScrollDispatchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollDispatchModule_Factory(t) { return new (t || ScrollDispatchModule)(); }, imports: [[ScrollingModule], ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollDispatchModule, { imports: [ScrollingModule], exports: [ScrollingModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatchModule, [{\n        type: NgModule,\n        args: [{\n                imports: [ScrollingModule],\n                exports: [ScrollingModule]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     */\n    constructor(_platform, ngZone) {\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(Platform), ɵngcc0.ɵɵinject(NgZone)); };\nViewportRuler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ViewportRuler, factory: ViewportRuler.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ ViewportRuler.ngInjectableDef = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Platform }, { type: NgZone }]; }, null); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentRuler\n * @param {?} platform\n * @param {?} ngZone\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, platform, ngZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { _fixedSizeVirtualScrollStrategyFactory, FixedSizeVirtualScrollStrategy, CdkFixedSizeVirtualScroll, SCROLL_DISPATCHER_PROVIDER_FACTORY, DEFAULT_SCROLL_TIME, ScrollDispatcher, SCROLL_DISPATCHER_PROVIDER, CdkScrollable, ScrollingModule, ScrollDispatchModule, VIEWPORT_RULER_PROVIDER_FACTORY, DEFAULT_RESIZE_TIME, ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkVirtualForOf, VIRTUAL_SCROLL_STRATEGY, CdkVirtualScrollViewport };\n\n//# sourceMappingURL=scrolling.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\nMutationObserverFactory.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MutationObserverFactory, factory: MutationObserverFactory.ɵfac, providedIn: 'root' });\n/** @nocollapse */ MutationObserverFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\nContentObserver.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ContentObserver, factory: ContentObserver.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ElementRef }, { type: NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nclass ObserversModule {\n}\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ObserversModule_Factory(t) { return new (t || ObserversModule)(); }, providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAC_ENTER = 3;\n/** @type {?} */\nconst BACKSPACE = 8;\n/** @type {?} */\nconst TAB = 9;\n/** @type {?} */\nconst NUM_CENTER = 12;\n/** @type {?} */\nconst ENTER = 13;\n/** @type {?} */\nconst SHIFT = 16;\n/** @type {?} */\nconst CONTROL = 17;\n/** @type {?} */\nconst ALT = 18;\n/** @type {?} */\nconst PAUSE = 19;\n/** @type {?} */\nconst CAPS_LOCK = 20;\n/** @type {?} */\nconst ESCAPE = 27;\n/** @type {?} */\nconst SPACE = 32;\n/** @type {?} */\nconst PAGE_UP = 33;\n/** @type {?} */\nconst PAGE_DOWN = 34;\n/** @type {?} */\nconst END = 35;\n/** @type {?} */\nconst HOME = 36;\n/** @type {?} */\nconst LEFT_ARROW = 37;\n/** @type {?} */\nconst UP_ARROW = 38;\n/** @type {?} */\nconst RIGHT_ARROW = 39;\n/** @type {?} */\nconst DOWN_ARROW = 40;\n/** @type {?} */\nconst PLUS_SIGN = 43;\n/** @type {?} */\nconst PRINT_SCREEN = 44;\n/** @type {?} */\nconst INSERT = 45;\n/** @type {?} */\nconst DELETE = 46;\n/** @type {?} */\nconst ZERO = 48;\n/** @type {?} */\nconst ONE = 49;\n/** @type {?} */\nconst TWO = 50;\n/** @type {?} */\nconst THREE = 51;\n/** @type {?} */\nconst FOUR = 52;\n/** @type {?} */\nconst FIVE = 53;\n/** @type {?} */\nconst SIX = 54;\n/** @type {?} */\nconst SEVEN = 55;\n/** @type {?} */\nconst EIGHT = 56;\n/** @type {?} */\nconst NINE = 57;\n/** @type {?} */\nconst FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nconst FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nconst QUESTION_MARK = 63;\n/** @type {?} */\nconst AT_SIGN = 64;\n/** @type {?} */\nconst A = 65;\n/** @type {?} */\nconst B = 66;\n/** @type {?} */\nconst C = 67;\n/** @type {?} */\nconst D = 68;\n/** @type {?} */\nconst E = 69;\n/** @type {?} */\nconst F = 70;\n/** @type {?} */\nconst G = 71;\n/** @type {?} */\nconst H = 72;\n/** @type {?} */\nconst I = 73;\n/** @type {?} */\nconst J = 74;\n/** @type {?} */\nconst K = 75;\n/** @type {?} */\nconst L = 76;\n/** @type {?} */\nconst M = 77;\n/** @type {?} */\nconst N = 78;\n/** @type {?} */\nconst O = 79;\n/** @type {?} */\nconst P = 80;\n/** @type {?} */\nconst Q = 81;\n/** @type {?} */\nconst R = 82;\n/** @type {?} */\nconst S = 83;\n/** @type {?} */\nconst T = 84;\n/** @type {?} */\nconst U = 85;\n/** @type {?} */\nconst V = 86;\n/** @type {?} */\nconst W = 87;\n/** @type {?} */\nconst X = 88;\n/** @type {?} */\nconst Y = 89;\n/** @type {?} */\nconst Z = 90;\n/** @type {?} */\nconst META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nconst MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nconst MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nconst CONTEXT_MENU = 93;\n/** @type {?} */\nconst NUMPAD_ZERO = 96;\n/** @type {?} */\nconst NUMPAD_ONE = 97;\n/** @type {?} */\nconst NUMPAD_TWO = 98;\n/** @type {?} */\nconst NUMPAD_THREE = 99;\n/** @type {?} */\nconst NUMPAD_FOUR = 100;\n/** @type {?} */\nconst NUMPAD_FIVE = 101;\n/** @type {?} */\nconst NUMPAD_SIX = 102;\n/** @type {?} */\nconst NUMPAD_SEVEN = 103;\n/** @type {?} */\nconst NUMPAD_EIGHT = 104;\n/** @type {?} */\nconst NUMPAD_NINE = 105;\n/** @type {?} */\nconst NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nconst NUMPAD_PLUS = 107;\n/** @type {?} */\nconst NUMPAD_MINUS = 109;\n/** @type {?} */\nconst NUMPAD_PERIOD = 110;\n/** @type {?} */\nconst NUMPAD_DIVIDE = 111;\n/** @type {?} */\nconst F1 = 112;\n/** @type {?} */\nconst F2 = 113;\n/** @type {?} */\nconst F3 = 114;\n/** @type {?} */\nconst F4 = 115;\n/** @type {?} */\nconst F5 = 116;\n/** @type {?} */\nconst F6 = 117;\n/** @type {?} */\nconst F7 = 118;\n/** @type {?} */\nconst F8 = 119;\n/** @type {?} */\nconst F9 = 120;\n/** @type {?} */\nconst F10 = 121;\n/** @type {?} */\nconst F11 = 122;\n/** @type {?} */\nconst F12 = 123;\n/** @type {?} */\nconst NUM_LOCK = 144;\n/** @type {?} */\nconst SCROLL_LOCK = 145;\n/** @type {?} */\nconst FIRST_MEDIA = 166;\n/** @type {?} */\nconst FF_MINUS = 173;\n/** @type {?} */\nconst MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nconst VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nconst VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nconst FF_MUTE = 181;\n/** @type {?} */\nconst FF_VOLUME_DOWN = 182;\n/** @type {?} */\nconst LAST_MEDIA = 183;\n/** @type {?} */\nconst FF_VOLUME_UP = 183;\n/** @type {?} */\nconst SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nconst EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nconst COMMA = 188;\n/** @type {?} */\nconst DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nconst SLASH = 191;\n/** @type {?} */\nconst APOSTROPHE = 192;\n/** @type {?} */\nconst TILDE = 192;\n/** @type {?} */\nconst OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nconst BACKSLASH = 220;\n/** @type {?} */\nconst CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nconst SINGLE_QUOTE = 222;\n/** @type {?} */\nconst MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => event[modifier]));\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MAC_ENTER, BACKSPACE, TAB, NUM_CENTER, ENTER, SHIFT, CONTROL, ALT, PAUSE, CAPS_LOCK, ESCAPE, SPACE, PAGE_UP, PAGE_DOWN, END, HOME, LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW, PLUS_SIGN, PRINT_SCREEN, INSERT, DELETE, ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, FF_SEMICOLON, FF_EQUALS, QUESTION_MARK, AT_SIGN, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, CONTEXT_MENU, NUMPAD_ZERO, NUMPAD_ONE, NUMPAD_TWO, NUMPAD_THREE, NUMPAD_FOUR, NUMPAD_FIVE, NUMPAD_SIX, NUMPAD_SEVEN, NUMPAD_EIGHT, NUMPAD_NINE, NUMPAD_MULTIPLY, NUMPAD_PLUS, NUMPAD_MINUS, NUMPAD_PERIOD, NUMPAD_DIVIDE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, NUM_LOCK, SCROLL_LOCK, FIRST_MEDIA, FF_MINUS, MUTE, VOLUME_DOWN, VOLUME_UP, FF_MUTE, FF_VOLUME_DOWN, LAST_MEDIA, FF_VOLUME_UP, SEMICOLON, EQUALS, COMMA, DASH, SLASH, APOSTROPHE, TILDE, OPEN_SQUARE_BRACKET, BACKSLASH, CLOSE_SQUARE_BRACKET, SINGLE_QUOTE, MAC_META, hasModifierKey };\n\n//# sourceMappingURL=keycodes.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ComponentFactoryResolver, Directive, EventEmitter, NgModule, Output, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ComponentFactoryResolver }, { type: ViewContainerRef }]; }, { attached: [{\n            type: Output\n        }] }); })();\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Portal, ComponentPortal, TemplatePortal, BasePortalOutlet, BasePortalHost, DomPortalOutlet, DomPortalHost, CdkPortal, TemplatePortalDirective, CdkPortalOutlet, PortalHostDirective, PortalModule, PortalInjector };\n\n//# sourceMappingURL=portal.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of the Angular Component Development Kit.\n * @type {?}\n */\nconst VERSION = new Version('8.2.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION };\n\n//# sourceMappingURL=cdk.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\nDirectionality.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Directionality, factory: Directionality.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ngInjectableDef = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n\n//# sourceMappingURL=bidi.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        /* Holds the previous direction emitted by directionality service change emitter.\n             This is used in updateOutlineGap() method to update the width and position of the gap in the\n             outline. Only relevant for the outline appearance. The direction is getting updated in the\n             UI after directionality service change emission. So the outlines gaps are getting\n             updated in updateOutlineGap() method before connectionContainer child direction change\n             in UI. We may get wrong calculations. So we are storing the previous direction to get the\n             correct outline calculations*/\n        this._previousDirection = 'ltr';\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._labelOptions.float || 'auto';\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._labelOptions.float || 'auto';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this hacky workaround in order to support both Ivy\n        // and ViewEngine. We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateOutlineGap();\n                this._previousDirection = this._dir.value;\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!(/** @type {?} */ (document.documentElement)).contains(this._elementRef.nativeElement)) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls.item(i).style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls.item(i).style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return this._previousDirection === 'rtl' ? rect.right : rect.left;\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(Platform), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc2.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline', { static: false },] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer', { static: false },] }],\n    _label: [{ type: ViewChild, args: ['label', { static: false },] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: false },] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel, { static: false },] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder, { static: false },] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError,] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint,] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix,] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{ selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" (cdkObserveContent)=\\\"updateOutlineGap()\\\" [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content><span>{{_control.placeholder}}</span></ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n                // MatInput is a directive and can't have styles, so we need to include its styles here\n                // in form-field-input.css. The MatInput styles are fairly minimal so it shouldn't be a\n                // big deal for people who aren't using MatInput.\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"],\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: Platform }, { type: NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline', { static: false }]\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer', { static: false }]\n        }], _label: [{\n            type: ViewChild,\n            args: ['label', { static: false }]\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: false }]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: false }]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder, { static: false }]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatFormFieldModule, MatError, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\nPlatform.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Platform, factory: Platform.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ngInjectableDef = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, normalizePassiveListenerOptions, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType, _supportsShadowDom };\n\n//# sourceMappingURL=platform.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, Inject, InjectionToken, Input, Output, TemplateRef, ViewChild, ViewEncapsulation, Directive, forwardRef, Host, NgZone, Optional, ViewContainerRef, NgModule } from '@angular/core';\nimport { MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, mixinDisableRipple, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { _supportsShadowDom } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { defer, fromEvent, merge, of, Subject, Subscription } from 'rxjs';\nimport { delay, filter, map, switchMap, take, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass MatAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nclass MatAutocompleteBase {\n}\n/** @type {?} */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} defaults\n     */\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     * @return {?}\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((/**\n             * @param {?} classList\n             * @param {?} className\n             * @return {?}\n             */\n            (classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }), (/** @type {?} */ ({})));\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /**\n     * Sets the autocomplete visibility classes on a classlist based on the panel is visible.\n     * @private\n     * @param {?} classList\n     * @return {?}\n     */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}@media (-ms-high-contrast:active){.mat-autocomplete-panel{outline:solid 1px}}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup,] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{ selector: 'mat-autocomplete',\n                template: \"<ng-template><div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel><ng-content></ng-content></div></ng-template>\",\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}@media (-ms-high-contrast:active){.mat-autocomplete-panel{outline:solid 1px}}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ] }]\n    }], function () { return [{ type: ChangeDetectorRef }, { type: ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel', { static: false }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\n/** @nocollapse */\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatAutocompleteTrigger)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _formField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = (/**\n         * @return {?}\n         */\n        () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     * @return {?}\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                window.addEventListener('blur', this._windowBlurHandler);\n            }));\n            if (_supportsShadowDom()) {\n                /** @type {?} */\n                const element = this._element.nativeElement;\n                /** @type {?} */\n                const rootNode = element.getRootNode ? element.getRootNode() : null;\n                // We need to take the `ShadowRoot` off of `window`, because the built-in types are\n                // incorrect. See https://github.com/Microsoft/TypeScript/issues/27929.\n                this._isInsideShadowRoot = rootNode instanceof ((/** @type {?} */ (window))).ShadowRoot;\n            }\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /**\n     * The currently active option, coerced to MatOption type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    _getOutsideClickStream() {\n        return merge((/** @type {?} */ (fromEvent(this._document, 'click'))), (/** @type {?} */ (fromEvent(this._document, 'touchend'))))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ ((this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target)));\n            /** @type {?} */\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        let target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        /** @type {?} */\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            /** @type {?} */\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        /** @type {?} */\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }));\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this._getPanelWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /**\n     * Sets the positions on a position strategy based on the directive's input state.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _setStrategyPositions(positionStrategy) {\n        /** @type {?} */\n        const belowPosition = {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        };\n        /** @type {?} */\n        const abovePosition = {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom',\n            // The overlay edge connected to the trigger should have squared corners, while\n            // the opposite end has rounded corners. We apply a CSS class to swap the\n            // border-radius based on the overlay position.\n            panelClass: 'mat-autocomplete-panel-above'\n        };\n        /** @type {?} */\n        let positions;\n        if (this.position === 'above') {\n            positions = [abovePosition];\n        }\n        else if (this.position === 'below') {\n            positions = [belowPosition];\n        }\n        else {\n            positions = [belowPosition, abovePosition];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _canOpen() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MatFormField, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Overlay }, { type: ViewContainerRef }, { type: NgZone }, { type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule], MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [MatAutocomplete, MatOptionModule, MatAutocompleteTrigger, MatAutocompleteOrigin, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MatAutocompleteSelectedEvent, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MatAutocomplete, MatAutocompleteModule, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, getMatAutocompleteMissingPanelError, AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocompleteTrigger, MatAutocompleteOrigin };\n\n//# sourceMappingURL=autocomplete.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ScrollDispatcher, ViewportRuler, ScrollingModule, VIEWPORT_RULER_PROVIDER } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nexport { ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkScrollable, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Inject, Injectable, NgZone, Optional, NgModule, SkipSelf, ApplicationRef, ComponentFactoryResolver, Injector, ElementRef, Directive, EventEmitter, InjectionToken, Input, Output, TemplateRef, ViewContainerRef, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Observable, Subject, merge, Subscription } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ScrollDispatcher), ɵngcc0.ɵɵinject(ViewportRuler), ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollStrategyOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ScrollStrategyOptions, factory: ScrollStrategyOptions.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ScrollDispatcher }, { type: ViewportRuler }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayKeyboardDispatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: OverlayKeyboardDispatcher, factory: OverlayKeyboardDispatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        /** @type {?} */\n        const previousContainers = this._document.getElementsByClassName(containerClass);\n        // Remove any old containers. This can happen when transitioning from the server to the client.\n        for (let i = 0; i < previousContainers.length; i++) {\n            (/** @type {?} */ (previousContainers[i].parentNode)).removeChild(previousContainers[i]);\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayContainer.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: OverlayContainer, factory: OverlayContainer.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayContainer.ngInjectableDef = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in DOM the can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign({}, this._config, sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign({}, this._config, { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = this._overlayRef.getConfig().minHeight;\n            /** @type {?} */\n            const minWidth = this._overlayRef.getConfig().minWidth;\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        if (this._hasFlexibleDimensions && this._overlayRef.getConfig().maxHeight) {\n            styles.maxHeight = '';\n        }\n        if (this._hasFlexibleDimensions && this._overlayRef.getConfig().maxWidth) {\n            styles.maxWidth = '';\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: null, bottom: null }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: null, right: null }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        if (origin instanceof HTMLElement) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        styles.position = this._cssPosition;\n        styles.marginLeft = config.width === '100%' ? '0' : this._leftOffset;\n        styles.marginTop = config.height === '100%' ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (config.width === '100%') {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = config.height === '100%' ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\nOverlayPositionBuilder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: OverlayPositionBuilder, factory: OverlayPositionBuilder.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ngInjectableDef = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: Platform }, { type: OverlayContainer }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because the ComponentFactoryResolver\n// it needs is different based on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(Injector), ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(Directionality), ɵngcc0.ɵɵinject(Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: Injector }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: Directionality }, { type: Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ElementRef }]; }, null); })();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position = this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: TemplateRef }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }] }); })();\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    VIEWPORT_RULER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        super(_document);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nFullscreenOverlayContainer.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FullscreenOverlayContainer, factory: FullscreenOverlayContainer.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ngInjectableDef = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Overlay, OverlayContainer, CdkOverlayOrigin, CdkConnectedOverlay, FullscreenOverlayContainer, OverlayRef, OverlayKeyboardDispatcher, OverlayPositionBuilder, GlobalPositionStrategy, ConnectedPositionStrategy, FlexibleConnectedPositionStrategy, OverlayConfig, validateVerticalPosition, validateHorizontalPosition, ConnectionPositionPair, ScrollingVisibility, ConnectedOverlayPositionChange, ScrollStrategyOptions, RepositionScrollStrategy, CloseScrollStrategy, NoopScrollStrategy, BlockScrollStrategy, OverlayModule, OVERLAY_PROVIDERS, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵg, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵf, OVERLAY_CONTAINER_PROVIDER as ɵb, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵa, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵc, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵe, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵd };\n\n//# sourceMappingURL=overlay.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Observable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return this._data instanceof Observable ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        /**\n         * Event emitted when the value has changed.\n         * @deprecated Use `changed` instead.\n         * \\@breaking-change 8.0.0 To be changed to `changed`\n         */\n        this.onChange = this.changed;\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\nUniqueSelectionDispatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: UniqueSelectionDispatcher, factory: UniqueSelectionDispatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */ UniqueSelectionDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UniqueSelectionDispatcher, ArrayDataSource, isDataSource, DataSource, getMultipleValuesInSingleSelectionError, SelectionModel };\n\n//# sourceMappingURL=collections.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat((/** @type {?} */ (value)))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n * @template T\n * @param {?} elementOrRef\n * @return {?}\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue, coerceElement };\n\n//# sourceMappingURL=coercion.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, ɵɵdefineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION } from '@angular/cdk';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION$1 = new Version('8.2.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$2 = new Version('8.2.3');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     * @param {?=} _hammerLoader\n     */\n    constructor(_sanityChecksEnabled, _hammerLoader) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        this._hammerLoader = _hammerLoader;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @private\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._window));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        if (VERSION$2.full !== VERSION.full) {\n            console.warn('The Angular Material version (' + VERSION$2.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !((/** @type {?} */ (this._window)))['Hammer'] && !this._hammerLoader) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); }, imports: [[BidiModule], BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: Platform }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); }, providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ErrorStateMatcher, factory: ErrorStateMatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} commonModule\n     */\n    constructor(_hammerOptions, commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatLineModule_Factory(t) { return new (t || MatLineModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this._onMousedown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this._onTouchStart = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this._onPointerUp = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach((/**\n             * @param {?} ripple\n             * @return {?}\n             */\n            ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            }));\n        });\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this._onMousedown)\n                .set('mouseup', this._onPointerUp)\n                .set('mouseleave', this._onPointerUp)\n                .set('touchstart', this._onTouchStart)\n                .set('touchend', this._onPointerUp)\n                .set('touchcancel', this._onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = RippleState.HIDDEN;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            }));\n        }));\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            }));\n        }\n    }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign({}, this._globalOptions.animation, this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ElementRef }, { type: NgZone }, { type: Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); }, imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                } }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\nconst ɵMatOptgroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{ selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                } }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc1.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{ selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option'\n                },\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); }, imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION$1 as VERSION, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n\n//# sourceMappingURL=core.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, Optional, SkipSelf, QueryList, Directive, ElementRef, Input, NgZone, isDevMode, InjectionToken, EventEmitter, Output, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, TAB, A, Z, ZERO, NINE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { debounceTime, filter, map, tap, take } from 'rxjs/operators';\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * IDs are deliminated by an empty space, as per the spec.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nconst ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nAriaDescriber.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AriaDescriber, factory: AriaDescriber.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ AriaDescriber.ngInjectableDef = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher, _document) {\n    return parentDispatcher || new AriaDescriber(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst ARIA_DESCRIBER_PROVIDER = {\n    // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n    provide: AriaDescriber,\n    deps: [\n        [new Optional(), new SkipSelf(), AriaDescriber],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap((/**\n         * @param {?} keyCode\n         * @return {?}\n         */\n        keyCode => (/** @type {?} */ (this))._pressedLetters.push(keyCode))), debounceTime(debounceInterval), filter((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), map((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    updateActiveItemIndex(index) {\n        this.updateActiveItem(index);\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(Platform)); };\nInteractivityChecker.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: InteractivityChecker, factory: InteractivityChecker.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ InteractivityChecker.ngInjectableDef = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Platform }]; }, null); })();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nFocusTrapFactory.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FocusTrapFactory, factory: FocusTrapFactory.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FocusTrapFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"] });\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\nLiveAnnouncer.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LiveAnnouncer, factory: LiveAnnouncer.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.ngInjectableDef = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(NgZone)); };\nCdkAriaLive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: LiveAnnouncer }, { type: ContentObserver }, { type: NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentAnnouncer\n * @param {?} liveElement\n * @param {?} _document\n * @param {?} ngZone\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentAnnouncer, liveElement, _document, ngZone) {\n    return parentAnnouncer || new LiveAnnouncer(liveElement, ngZone, _document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new Optional(), new SkipSelf(), LiveAnnouncer],\n        [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n        DOCUMENT,\n        NgZone,\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('mouse');\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            // Since this listener is bound on the `document` level, any events coming from the shadow DOM\n            // will have their `target` set to the shadow root. If available, use `composedPath` to\n            // figure out the event target.\n            this._lastTouchTarget = event.composedPath ? event.composedPath()[0] : event.target;\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            let cachedInfo = this._elementInfo.get(nativeElement);\n            (/** @type {?} */ (cachedInfo)).checkChildren = checkChildren;\n            return (/** @type {?} */ (cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        let info = {\n            unlisten: (/**\n             * @return {?}\n             */\n            () => { }),\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        /** @type {?} */\n        let focusListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onFocus(event, nativeElement));\n        /** @type {?} */\n        let blurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onBlur(event, nativeElement));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        }));\n        // Create an unlisten function for later.\n        info.unlisten = (/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        });\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            this._originTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._origin = null), 1);\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        let focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        /** @type {?} */\n        let origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _incrementMonitoredElementCount() {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _decrementMonitoredElementCount() {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(Platform)); };\nFocusMonitor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FocusMonitor, factory: FocusMonitor.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ FocusMonitor.ngInjectableDef = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: FocusMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: NgZone }, { type: Platform }]; }, null); })();\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n}\nA11yModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function A11yModule_Factory(t) { return new (t || A11yModule)(); }, imports: [[CommonModule, PlatformModule, ObserversModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; }, imports: function () { return [CommonModule, PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ARIA_DESCRIBER_PROVIDER_FACTORY, MESSAGES_CONTAINER_ID, CDK_DESCRIBEDBY_ID_PREFIX, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, AriaDescriber, ARIA_DESCRIBER_PROVIDER, ActiveDescendantKeyManager, FocusKeyManager, ListKeyManager, FocusTrap, FocusTrapFactory, CdkTrapFocus, InteractivityChecker, LIVE_ANNOUNCER_PROVIDER_FACTORY, LiveAnnouncer, CdkAriaLive, LIVE_ANNOUNCER_PROVIDER, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_DEFAULT_OPTIONS, FOCUS_MONITOR_PROVIDER_FACTORY, TOUCH_BUFFER_MS, FocusMonitor, CdkMonitorFocus, FOCUS_MONITOR_PROVIDER, isFakeMousedownFromScreenReader, A11yModule };\n\n//# sourceMappingURL=a11y.js.map"]}