{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./src/app/services/calendar.service.ts","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./src/app/services/form-helper.service.ts","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js","./src/app/models/from-validation-message.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;;;;;;;;;ACzGvE;AACX;AACG;AACZ;AACmB;AACF;AACf;IAK9B,eAAe,SAAf,eAAe;IAC1B,YACU,GAAe,EACf,IAAiB,EACjB,IAAgB;QAFhB,QAAG,GAAH,GAAG,CAAY;QACf,SAAI,GAAJ,IAAI,CAAa;QACjB,SAAI,GAAJ,IAAI,CAAY;QAE1B,wBAAmB,GAAqB,EAAE,CAAC;QAC3C,0BAAqB,GAA8B,IAAI,4CAAO,EAE3D,CAAC;IAJD,CAAC;IAKJ,iBAAiB,CACf,QAAgB,EAChB,MAAc,EACd,MAAe,EACf,kBAA0B;QAE1B,IAAI,KAAK,GAAG,IAAI,sEAAc,EAAE,CAAC;QACjC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC3B,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACvB,KAAK,CAAC,qBAAqB,GAAG,kBAAkB,CAAC;QACjD,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,mBA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","file":"common-es2015.js","sourcesContent":["const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","import { AvailableHours } from \"./../models/available-hours\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { concatMap, map, tap } from \"rxjs/operators\";\nimport { from, Subject, of } from \"rxjs\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { EnvService } from \"src/app/services/env.service\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CalendarService {\n  constructor(\n    private env: EnvService,\n    private auth: AuthService,\n    private http: HttpClient\n  ) {}\n  availableHoursArray: AvailableHours[] = [];\n  availableHoursUpdated: Subject<AvailableHours[]> = new Subject<\n    AvailableHours[]\n  >();\n  addAvailableHours(\n    timeFrom: string,\n    timeTo: string,\n    repeat: boolean,\n    repeatingDayOfWeek: number\n  ) {\n    let hours = new AvailableHours();\n    hours.time_from = timeFrom;\n    hours.time_to = timeTo;\n    hours.repeating_day_of_week = repeatingDayOfWeek;\n    if (this.checkForOverlap(this.availableHoursArray, hours)) {\n      return of(false);\n    }\n    let url = \"calendar/addAvailableHours\";\n    return from(this.auth.getToken()).pipe(\n      concatMap((token) => {\n        return this.http\n          .post(\n            this.env.API_URL + url,\n            {\n              time_from: timeFrom,\n              time_to: timeTo,\n              repeating_day_of_week: repeatingDayOfWeek,\n            },\n            {\n              headers: {\n                Authorization:\n                  token[\"token_type\"] + \" \" + token[\"access_token\"],\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          )\n          .pipe(\n            tap((result) => {\n              this.availableHoursArray.push(result as AvailableHours);\n              this.availableHoursUpdated.next(this.availableHoursArray);\n            })\n          );\n      })\n    );\n  }\n  checkForOverlap(hoursArray: AvailableHours[], hours: AvailableHours) {\n   \n    const myArray = hoursArray.filter((item) => {\n      return item.repeating_day_of_week == hours.repeating_day_of_week;\n    });\n    for (let i = 0; i < myArray.length; i++) {\n      \n      if(this.haveOverlap(hours, myArray[i]))\n      {\n        return true;\n      }\n      \n    }\n\n    return false;\n  }\n  haveOverlap(hours1:AvailableHours, hours2:AvailableHours):boolean\n  {\n    const hours1FromInt = AvailableHours.getMilitaryFormatInt(\n      hours1.time_from\n    );\n    const hours1ToInt = AvailableHours.getMilitaryFormatInt(hours1.time_to);\n    const hours2FromInt = AvailableHours.getMilitaryFormatInt(hours2.time_from);\n    const hours2ToInt = AvailableHours.getMilitaryFormatInt(hours2.time_to);\n    if (\n      (hours1FromInt >= hours2FromInt && hours1FromInt < hours2ToInt) ||\n      (hours1ToInt > hours2FromInt && hours1ToInt <= hours2ToInt) ||\n      (hours1FromInt <= hours2FromInt && hours1ToInt >= hours2ToInt)\n    ) {\n      return true;\n    }\n    return false;\n  }\n  toggleDisabledAvailableHours(id) {\n    let url = \"calendar/toggleDisabledAvailableHours/\" + id;\n    return from(this.auth.getToken()).pipe(\n      concatMap((token) => {\n        return this.http\n          .post(this.env.API_URL + url, null, {\n            headers: {\n              Authorization: token[\"token_type\"] + \" \" + token[\"access_token\"],\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          })\n          .pipe(\n            tap((result) => {\n              this.availableHoursArray.find(\n                (hour) => hour.id == id\n              ).disabled = (result as AvailableHours).disabled;\n              this.availableHoursUpdated.next(this.availableHoursArray);\n            })\n          );\n      })\n    );\n  }\n  removeAvailableHours(id) {\n    let url = \"calendar/removeAvailableHours/\" + id;\n    return from(this.auth.getToken()).pipe(\n      concatMap((token) => {\n        return this.http\n          .post(this.env.API_URL + url, null, {\n            headers: {\n              Authorization: token[\"token_type\"] + \" \" + token[\"access_token\"],\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          })\n          .pipe(\n            tap((result) => {\n              this.availableHoursArray.splice(\n                this.availableHoursArray.indexOf(\n                  this.availableHoursArray.find((hour) => hour.id == id)\n                ),\n                1\n              );\n              this.availableHoursUpdated.next(this.availableHoursArray);\n            })\n          );\n      })\n    );\n  }\n  emptyCalendar() {\n    this.availableHoursArray = [];\n    this.availableHoursUpdated.next(this.availableHoursArray);\n  }\n  getAvailableHours(providerId: number = null) {\n    let body = null;\n    let url = \"calendar/availableHours\";\n    if (providerId != null) {\n      body = {\n        provider_id: providerId,\n      };\n    }\n    return from(this.auth.getToken()).pipe(\n      concatMap((token) => {\n        return this.http\n          .post(this.env.API_URL + url, body, {\n            headers: {\n              Authorization: token[\"token_type\"] + \" \" + token[\"access_token\"],\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          })\n          .pipe(\n            tap((result) => {\n              this.availableHoursArray = result as AvailableHours[];\n              this.availableHoursUpdated.next(this.availableHoursArray);\n            })\n          );\n      })\n    );\n  }\n}\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","import { AlertService } from \"./alert.service\";\nimport {\n  FormValidationMessageField,\n  FormValidationType,\n  FormValidationMessage,\n} from \"src/app/models/from-validation-message\";\nimport { Injectable, OnDestroy } from \"@angular/core\";\nimport { FormGroup, ValidationErrors, FormControl, ValidatorFn } from \"@angular/forms\";\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FormHelperService {\n  constructor(private alert: AlertService) {}\n  validateForm(\n    validationMessages: FormValidationMessageField[],\n    form: FormGroup\n  ): boolean {\n    for (let key of Object.keys(form.controls)) {\n      const controlErrors: ValidationErrors = form.get(key).errors;\n      if (controlErrors != null) {\n        for (let keyError of Object.keys(controlErrors)) {\n          this.alert.presentError(\n            validationMessages\n              .find((v) => v.name == key)\n              .validations.find((m) => m.type == keyError).message\n          );\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  addValidationMessage(\n    messagesObject: FormValidationMessageField[],\n    controlName: string,\n    validationType: FormValidationType,\n    message: string\n  ) {\n    let field = messagesObject.find((o) => o.name == controlName);\n    if (!field) {\n      field = new FormValidationMessageField();\n      field.name = controlName;\n      field.validations = [];\n      messagesObject.push(field);\n    }\n    let validation = field.validations.find((v) => v.type == validationType);\n    if (!validation) {\n      validation = new FormValidationMessage();\n      validation.type = validationType;\n      field.validations.push(validation);\n    }\n    validation.message = message;\n  }\n  public setConditionalValidators(control:FormControl,\n    controlToObserveValue:FormControl,\n    condition:boolean | null,\n    validator:ValidatorFn|ValidatorFn[],\n    cleanUpComponent: OnDestroy ){\n    \n\n    if (cleanUpComponent) {\n      let cleanUpSubject = new Subject();\n      const originalDestroy = cleanUpComponent.ngOnDestroy;\n      cleanUpComponent.ngOnDestroy = () => {\n        originalDestroy.apply(cleanUpComponent, arguments);\n        cleanUpSubject.next();\n        cleanUpSubject.complete();\n      };\n      \n      controlToObserveValue.valueChanges.pipe(takeUntil(cleanUpSubject)).subscribe((result)=>{\n       \n        if((condition !== null && condition) || result )\n        {\n          control.setValidators(\n            validator\n          );\n        }\n        else\n        {\n          control.clearValidators();\n        }\n        control.updateValueAndValidity();\n      });\n    }\n\n   \n  }\n}\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export class FormValidationMessageField\n{\n    name:string;\n    validations:FormValidationMessage[];\n}\nexport class FormValidationMessage {\n    type:string;\n    message:string;\n}\nexport enum FormValidationType\n{\n    REQUIRED='required',\n    PATTERN = 'pattern',\n}"],"sourceRoot":"webpack:///"}