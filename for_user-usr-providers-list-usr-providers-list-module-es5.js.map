{"version":3,"sources":["webpack:///src/app/for_user/usr-providers-list/usr-providers-list.module.ts","webpack:///src/app/for_user/usr-providers-list/usr-providers-list.page.ts","webpack:///src/app/for_user/usr-providers-list/usr-providers-list.page.scss","webpack:///src/app/for_user/usr-providers-list/usr-providers-list-routing.module.ts","webpack:///src/app/for_user/usr-providers-list/usr-providers-list.page.html"],"names":["UsrProvidersListPageModule","imports","declarations","UsrProvidersListPage","providerService","navController","route","env","selectedProviderFilterStatus","NA","getName","loaded","statsType","providerGroupId","getStatusClass","getStatusText","getDegreeText","getDegreeString","refresher","event","target","providersByCategoryIdShared","request","ev","checked","ONLINE","snapshot","params","resource","length","providerCategoryShared","id","reset","getUpdateNotifier","subscribe","result","complete","setFilter","p","status","selector","template","routes","path","component","UsrProvidersListPageRoutingModule","forChild","exports"],"mappings":"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","file":"for_user-usr-providers-list-usr-providers-list-module-es5.js","sourcesContent":["import { SkeletonModule } from './../../skeleton/skeleton/skeleton.module';\nimport { CommonDeclarationsModule } from './../../common/common-declarations/common-declarations.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsrProvidersListPageRoutingModule } from './usr-providers-list-routing.module';\n\nimport { UsrProvidersListPage } from './usr-providers-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UsrProvidersListPageRoutingModule,\n    CommonDeclarationsModule,\n    SkeletonModule\n  ],\n  declarations: [UsrProvidersListPage]\n\n})\nexport class UsrProvidersListPageModule {}\n","import { EnvService } from \"src/app/services/env.service\";\nimport { RemoteStatsType } from \"./../../models/remote-stats\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { ProviderGroup } from \"./../../models/provider-group\";\nimport { User } from \"./../../models/user\";\nimport { Provider, ProviderStatus } from \"./../../models/provider\";\nimport { NavController, PopoverController, IonRefresher } from \"@ionic/angular\";\nimport { ProviderService } from \"./../../services/provider.service\";\nimport { Component, OnInit,OnDestroy } from \"@angular/core\";\nimport { map } from \"rxjs/operators\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\n@UntilDestroy()\n@Component({\n  selector: \"app-usr-providers-list\",\n  templateUrl: \"./usr-providers-list.page.html\",\n  styleUrls: [\"./usr-providers-list.page.scss\"],\n})\nexport class UsrProvidersListPage implements OnInit,OnDestroy {\n  selectedProviderFilterStatus: ProviderStatus = ProviderStatus.NA;\n  public getName = User.getName;\n  loaded = false;\n  statsType = RemoteStatsType;\n  providerGroupId: number = null;\n  public providerGroup: ProviderGroup;\n  getStatusClass = Provider.getStatusClass;\n  getStatusText = Provider.getStatusText;\n  getDegreeText = Provider.getDegreeString;\n  refresher: IonRefresher = null;\n  constructor(\n    public providerService: ProviderService,\n    private navController: NavController,\n    private route: ActivatedRoute,\n    public env: EnvService\n  ) {}\n\n  ionViewDidEnter() {\n    //this.userService.updateRemoteStats().subscribe();\n  }\n\n  refresh(event) {\n    this.refresher = event.target;\n    this.providerService.providersByCategoryIdShared.request(\n      this.providerGroupId\n    );\n  }\n\n  setFilterStatus(ev) {\n    // this.selectedProviderFilterStatus = ev;\n    if (ev.target.checked) {\n      this.selectedProviderFilterStatus = ProviderStatus.ONLINE;\n    } else {\n      this.selectedProviderFilterStatus = ProviderStatus.NA;\n    }\n  }\n  ngOnInit() {\n    this.providerGroupId = this.route.snapshot.params.providerGroupId;\n\n    if (\n      this.providerService.providersByCategoryIdShared.resource().length &&\n      this.providerService.providerCategoryShared.resource() &&\n      this.providerService.providerCategoryShared.resource().id ==\n        this.providerGroupId\n    ) {\n    } else {\n      this.providerService.providersByCategoryIdShared.reset();\n      this.providerService.providerCategoryShared.request(this.providerGroupId);\n    }\n    this.providerService.providersByCategoryIdShared\n      .getUpdateNotifier(this)\n      .subscribe((result) => {\n        this.refresher && this.refresher.complete();\n      });\n    this.providerService.providersByCategoryIdShared.setFilter((p) => {\n      if (this.selectedProviderFilterStatus == ProviderStatus.NA) return true;\n      return p.status == this.selectedProviderFilterStatus;\n    });\n    this.providerService.providersByCategoryIdShared.request(\n      this.providerGroupId\n    );\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcl91c2VyL3Vzci1wcm92aWRlcnMtbGlzdC91c3ItcHJvdmlkZXJzLWxpc3QucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsrProvidersListPage } from './usr-providers-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsrProvidersListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsrProvidersListPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-loading-toolbar-button></app-loading-toolbar-button>\\n      <!-- <ion-button  (click)=\\\"presentPopover()\\\">\\n        <ion-icon name=\\\"options-outline\\\"></ion-icon>\\n      </ion-button> -->\\n      <ion-back-button\\n        defaultHref=\\\"provider-categories\\\"\\n         \\n      ></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title *ngIf=\\\"this.providerGroup\\\"\\n      >زمینه {{this.providerGroup.name}}</ion-title\\n    >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"end\\\">\\n        <ion-icon name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <div\\n    class=\\\"no-provider h-100 d-flex flex-column justify-content-center align-items-center\\\"\\n    *ngIf=\\\"false\\\"\\n  >\\n    <ion-img src=\\\"/assets/image/no-providers.jpg\\\"></ion-img>\\n    <span class=\\\"light-text normal-text\\\">\\n      هنوز مشاوری در این دسته وجود ندارد.\\n    </span>\\n  </div>\\n  <app-random-provider-avatars></app-random-provider-avatars>\\n  <app-provider-list-skeleton *ngIf=\\\"providerService.providersByCategoryIdShared.needsSkeleton()\\\" [times]=\\\"3\\\"></app-provider-list-skeleton>\\n  <ion-list>\\n    <app-provider-list-item \\n      *ngFor=\\\"let provider of providerService.providersByCategoryIdShared.filteredResource()\\\"\\n      [provider] = \\\"provider\\\"\\n      [category] = \\\"providerService.providerCategoryShared.resource()\\\"\\n      [isFavorite] = \\\"providerService.isFavorite(provider.id) | async\\\"\\n      \\n    ></app-provider-list-item>\\n  </ion-list>\\n</ion-content>\\n\";"]}