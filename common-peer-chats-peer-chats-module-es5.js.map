{"version":3,"sources":["webpack:///src/app/common/peer-chats/peer-chats.page.ts","webpack:///src/app/common/peer-chats/peer-chats.page.html","webpack:///src/app/common/peer-chats/peer-chats.page.scss","webpack:///src/app/common/peer-chats/peer-chats-routing.module.ts","webpack:///src/app/common/peer-chats/peer-chats.module.ts"],"names":["PeerChatsPage","sessionsManager","env","route","peers","refresher","getName","getRoleName","defaultBackUrl","roleId","snapshot","params","USER_ROLE_ID","myPeerSubscriptionsShared","getUpdateNotifier","subscribe","result","resource","complete","request","ev","target","user","startPeer2PeerChat","type","P2P_WITH_PROVIDER","P2P_WITH_USER","getUserUnreadMessagesCount","isUserOnline","selector","template","routes","path","component","PeerChatsPageRoutingModule","imports","forChild","exports","PeerChatsPageModule","declarations"],"mappings":"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","file":"common-peer-chats-peer-chats-module-es5.js","sourcesContent":["import { ActivatedRoute } from \"@angular/router\";\nimport { EnvService } from \"src/app/services/env.service\";\nimport {\n  SessionsManagerService,\n  ChatType,\n} from \"src/app/services/sessions-manager-service\";\nimport { IonRefresher } from \"@ionic/angular\";\nimport { User, RoleId } from \"src/app/models/user\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-peer-chats\",\n  templateUrl: \"./peer-chats.page.html\",\n  styleUrls: [\"./peer-chats.page.scss\"],\n})\nexport class PeerChatsPage implements OnInit {\n  peers: User[] = [];\n  refresher: IonRefresher = null;\n  getName = User.getName;\n  getRoleName = User.getRoleName;\n  defaultBackUrl = \"\";\n  roleId = null;\n  constructor(\n    private sessionsManager: SessionsManagerService,\n    public env: EnvService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.roleId = this.route.snapshot.params.roleId;\n    if (this.roleId == this.env.USER_ROLE_ID) {\n      this.defaultBackUrl = \"usr-reservations\";\n    } else {\n      this.defaultBackUrl = \"pvd-reservations\";\n    }\n    this.sessionsManager.myPeerSubscriptionsShared\n      .getUpdateNotifier(this)\n      .subscribe((result) => {\n        this.peers = this.sessionsManager.myPeerSubscriptionsShared.resource();\n        if (this.refresher) {\n          this.refresher.complete();\n        }\n      });\n    this.sessionsManager.myPeerSubscriptionsShared.request();\n  }\n\n  refresh(ev) {\n    this.refresher = ev.target;\n    this.sessionsManager.myPeerSubscriptionsShared.request();\n  }\n  chat(user) {\n     this.sessionsManager.startPeer2PeerChat(user);\n    let type: ChatType;\n    if (this.roleId == RoleId.USER_ROLE_ID) {\n      type = ChatType.P2P_WITH_PROVIDER;\n    } else {\n      type = ChatType.P2P_WITH_USER;\n    }\n    //this.sessionsManager.enterChat(type, user.id,this.roleId == RoleId.PROVIDER_ROLE_ID);\n  }\n  getUnreadMessages(user: User) {\n    return this.sessionsManager.getUserUnreadMessagesCount(user);\n  }\n  isOnline(user: User) {\n    return this.sessionsManager.isUserOnline(user);\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-loading-toolbar-button></app-loading-toolbar-button>\\n      <ion-back-button\\n         \\n        [defaultHref]=\\\"defaultBackUrl\\\"\\n      ></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title>چت های هماهنگی</ion-title>\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"end\\\">\\n        <ion-icon name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <div\\n    class=\\\"no-chats h-100 d-flex flex-column align-items-center justify-content-center\\\"\\n    *ngIf=\\\"peers.length < 1\\\"\\n  >\\n    <ion-img src=\\\"assets/image/no-chats.jpg\\\"></ion-img>\\n    <span class=\\\"light-text normal-text\\\">هنوز موردی در لیست نیست.</span>\\n  </div>\\n  <ion-list>\\n    <ion-item\\n      button\\n      class=\\\"provider-item-container shadow-item\\\"\\n      *ngFor=\\\"let user of peers\\\"\\n      (click)=\\\"chat(user)\\\"\\n    >\\n      <app-user-avatar [user]=\\\"user\\\"></app-user-avatar>\\n      <ion-text class=\\\"d-flex flex-column\\\">\\n        <span class=\\\"name number-text dark-text\\\">{{getName(user)}}</span>\\n        <small class=\\\"category-name light-text\\\">{{getRoleName(user)}} </small>\\n      </ion-text>\\n      <ion-badge\\n        *ngIf=\\\"getUnreadMessages(user)\\\"\\n        slot=\\\"end\\\"\\n        color=\\\"primary\\\"\\n        mode=\\\"ios\\\"\\n        slot=\\\"end\\\"\\n        >{{ getUnreadMessages(user) }}</ion-badge\\n      >\\n      <ion-icon\\n        slot=\\\"end\\\"\\n        class=\\\"online-status\\\"\\n        [ngClass]=\\\"(isOnline(user))?'online':''\\\"\\n        [name]=\\\"this.env.ONLINE_ICON\\\"\\n      ></ion-icon>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9wZWVyLWNoYXRzL3BlZXItY2hhdHMucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PeerChatsPage } from './peer-chats.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PeerChatsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PeerChatsPageRoutingModule {}\n","import { CommonDeclarationsModule } from './../common-declarations/common-declarations.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PeerChatsPageRoutingModule } from './peer-chats-routing.module';\n\nimport { PeerChatsPage } from './peer-chats.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PeerChatsPageRoutingModule,\n    CommonDeclarationsModule\n  ],\n  declarations: [PeerChatsPage]\n})\nexport class PeerChatsPageModule {}\n"]}