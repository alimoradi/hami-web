{"version":3,"sources":["./src/app/for_user/usr-providers-list/usr-providers-list.module.ts","./src/app/for_user/usr-providers-list/usr-providers-list.page.ts","./src/app/for_user/usr-providers-list/usr-providers-list.page.scss","./src/app/for_user/usr-providers-list/usr-providers-list-routing.module.ts","./src/app/for_user/usr-providers-list/usr-providers-list.page.html"],"names":[],"mappings":"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","file":"for_user-usr-providers-list-usr-providers-list-module-es2015.js","sourcesContent":["import { SkeletonModule } from './../../skeleton/skeleton/skeleton.module';\nimport { CommonDeclarationsModule } from './../../common/common-declarations/common-declarations.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsrProvidersListPageRoutingModule } from './usr-providers-list-routing.module';\n\nimport { UsrProvidersListPage } from './usr-providers-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UsrProvidersListPageRoutingModule,\n    CommonDeclarationsModule,\n    SkeletonModule\n  ],\n  declarations: [UsrProvidersListPage]\n\n})\nexport class UsrProvidersListPageModule {}\n","import { EnvService } from \"src/app/services/env.service\";\nimport { RemoteStatsType } from \"./../../models/remote-stats\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { ProviderGroup } from \"./../../models/provider-group\";\nimport { User } from \"./../../models/user\";\nimport { Provider, ProviderStatus } from \"./../../models/provider\";\nimport { NavController, PopoverController, IonRefresher } from \"@ionic/angular\";\nimport { ProviderService } from \"./../../services/provider.service\";\nimport { Component, OnInit,OnDestroy } from \"@angular/core\";\nimport { map } from \"rxjs/operators\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\n@UntilDestroy()\n@Component({\n  selector: \"app-usr-providers-list\",\n  templateUrl: \"./usr-providers-list.page.html\",\n  styleUrls: [\"./usr-providers-list.page.scss\"],\n})\nexport class UsrProvidersListPage implements OnInit,OnDestroy {\n  selectedProviderFilterStatus: ProviderStatus = ProviderStatus.NA;\n  public getName = User.getName;\n  loaded = false;\n  statsType = RemoteStatsType;\n  providerGroupId: number = null;\n  public providerGroup: ProviderGroup;\n  getStatusClass = Provider.getStatusClass;\n  getStatusText = Provider.getStatusText;\n  getDegreeText = Provider.getDegreeString;\n  refresher: IonRefresher = null;\n  constructor(\n    public providerService: ProviderService,\n    private navController: NavController,\n    private route: ActivatedRoute,\n    public env: EnvService\n  ) {}\n\n  ionViewDidEnter() {\n    //this.userService.updateRemoteStats().subscribe();\n  }\n\n  refresh(event) {\n    this.refresher = event.target;\n    this.providerService.providersByCategoryIdShared.request(\n      this.providerGroupId\n    );\n  }\n\n  setFilterStatus(ev) {\n    // this.selectedProviderFilterStatus = ev;\n    if (ev.target.checked) {\n      this.selectedProviderFilterStatus = ProviderStatus.ONLINE;\n    } else {\n      this.selectedProviderFilterStatus = ProviderStatus.NA;\n    }\n  }\n  ngOnInit() {\n    this.providerGroupId = this.route.snapshot.params.providerGroupId;\n\n    if (\n      this.providerService.providersByCategoryIdShared.resource().length &&\n      this.providerService.providerCategoryShared.resource() &&\n      this.providerService.providerCategoryShared.resource().id ==\n        this.providerGroupId\n    ) {\n    } else {\n      this.providerService.providersByCategoryIdShared.reset();\n      this.providerService.providerCategoryShared.request(this.providerGroupId);\n    }\n    this.providerService.providersByCategoryIdShared\n      .getUpdateNotifier(this)\n      .subscribe((result) => {\n        this.refresher && this.refresher.complete();\n      });\n    this.providerService.providersByCategoryIdShared.setFilter((p) => {\n      if (this.selectedProviderFilterStatus == ProviderStatus.NA) return true;\n      return p.status == this.selectedProviderFilterStatus;\n    });\n    this.providerService.providersByCategoryIdShared.request(\n      this.providerGroupId\n    );\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcl91c2VyL3Vzci1wcm92aWRlcnMtbGlzdC91c3ItcHJvdmlkZXJzLWxpc3QucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsrProvidersListPage } from './usr-providers-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsrProvidersListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsrProvidersListPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-loading-toolbar-button></app-loading-toolbar-button>\\n      <!-- <ion-button  (click)=\\\"presentPopover()\\\">\\n        <ion-icon name=\\\"options-outline\\\"></ion-icon>\\n      </ion-button> -->\\n      <ion-back-button\\n        defaultHref=\\\"provider-categories\\\"\\n         \\n      ></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title *ngIf=\\\"this.providerGroup\\\"\\n      >زمینه {{this.providerGroup.name}}</ion-title\\n    >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"end\\\">\\n        <ion-icon name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <div\\n    class=\\\"no-provider h-100 d-flex flex-column justify-content-center align-items-center\\\"\\n    *ngIf=\\\"false\\\"\\n  >\\n    <ion-img src=\\\"/assets/image/no-providers.jpg\\\"></ion-img>\\n    <span class=\\\"light-text normal-text\\\">\\n      هنوز مشاوری در این دسته وجود ندارد.\\n    </span>\\n  </div>\\n  <app-random-provider-avatars></app-random-provider-avatars>\\n  <app-provider-list-skeleton *ngIf=\\\"providerService.providersByCategoryIdShared.needsSkeleton()\\\" [times]=\\\"3\\\"></app-provider-list-skeleton>\\n  <ion-list>\\n    <app-provider-list-item \\n      *ngFor=\\\"let provider of providerService.providersByCategoryIdShared.filteredResource()\\\"\\n      [provider] = \\\"provider\\\"\\n      [category] = \\\"providerService.providerCategoryShared.resource()\\\"\\n      [isFavorite] = \\\"providerService.isFavorite(provider.id) | async\\\"\\n      \\n    ></app-provider-list-item>\\n  </ion-list>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}